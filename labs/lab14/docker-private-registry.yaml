---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-private-registry
  name: docker-private-registry-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-private-registry
  template:
    metadata:
      labels:
        app: docker-private-registry
    spec:
      containers:
      - image: arm32v6/registry:2
        imagePullPolicy: IfNotPresent
        name: docker-private-registry
        env:
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:5000
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /certs/cert.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /certs/cert.key
        ports:
        - containerPort: 5000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/registry
          name: image-store
        - mountPath: /certs
          name: certs
      volumes:
      - emptyDir: {} # THIS IS NOT PERSISTENT! WILL DELETE WITH POD!
        name: image-store
      - name: certs
        secret:
          secretName: registry-tls
          items:
          - key: tls.crt
            path: cert.crt
            mode: 256 # 0400 in decimal
          - key: tls.key
            path: cert.key
            mode: 256 # 0400 in decimal
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: docker-private-registry
  name: docker-private-registry
spec:
  ports:
  - nodePort: 30500
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-private-registry
  type: NodePort

---
apiVersion: v1
kind: Secret
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdDekNDQS9PZ0F3SUJBZ0lVVkJCTFV6ckFSd0xvQXhWblRaTWozMk1DUk84d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daUXhDekFKQmdOVkJBWVRBa05CTVJBd0RnWURWUVFJREFkUGJuUmhjbWx2TVJNd0VRWURWUVFIREFwWApiMjlrWW5KcFpHZGxNUkV3RHdZRFZRUUtEQWhGY21samMzTnZiakVNTUFvR0ExVUVDd3dEUlU5RE1SSXdFQVlEClZRUUREQWt4TWpjdU1DNHhMakV4S1RBbkJna3Foa2lHOXcwQkNRRVdHbnB6YjJ4MExuZ3VjM3BoWW05QVpYSnAKWTNOemIyNHVZMjl0TUI0WERUSXdNRFl4TVRJek16a3hNRm9YRFRJeE1EWXhNVEl6TXpreE1Gb3dnWlF4Q3pBSgpCZ05WQkFZVEFrTkJNUkF3RGdZRFZRUUlEQWRQYm5SaGNtbHZNUk13RVFZRFZRUUhEQXBYYjI5a1luSnBaR2RsCk1SRXdEd1lEVlFRS0RBaEZjbWxqYzNOdmJqRU1NQW9HQTFVRUN3d0RSVTlETVJJd0VBWURWUVFEREFreE1qY3UKTUM0eExqRXhLVEFuQmdrcWhraUc5dzBCQ1FFV0ducHpiMngwTG5ndWMzcGhZbTlBWlhKcFkzTnpiMjR1WTI5dApNSUlDSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQTJSbmpMYU5tV2VXRmVWL2JvSlF3CmIrMFE5TmRxS3lCM0lRcG55LzZHY0pMNkp0bTFNTzJwNVgzb2UzVW9wT2ZkVFpJMGZYY2dhNVFvanNJclNDSW8KRS9QUEpBMzFjdExlYTRDNkM5aXhWOUd4a0JJbVNCd2lFd2hIYlUycndHbUhhdUhPNlJPY1VRVHZBUmxYTVkzSwo3bHZPVWdmUWp1clZnaDFzREE1VEd4R2ozWmNYTzhVdTZSUnI2VlpBUkE2cUJBWXhvT2N0d081K0YrNHJJK0wrCmsyWDJMZ2N1VXIvTXgyNEsyWG5neVFya3AxeTMvWmRTdWpZL0FYWFhtZTZDY3RzMmZsMytmUlB5cFZJeFhQMUEKTC9LQmI3OXdWaHo5TVpYcW1rKzdLcEtYRXliUjl0b2s2dXJXeG9vUnhzNm5SM2pRMTg3c0dtOStlQVlYMmN0KworcHlKQy8wNDVsVFRPY1VGK1VVZlVQV3E5M3QzWEhOV0Nvc1dEM1NkaDdRWFJVOE1PZ25KbkNVZE5PanFPbERwCis1Z2RUbUZPNHNNMFZjNEN4K0ZxOU8yTUpqR1dRaTFGanlsbjNqLzFnbmtRNDhTaFNjMGJMR0xqUlJ6L0J1cnIKK2hSU2RZdU1Nd0dWYjVMbFhsL1FtVS9yblVuRUE3VlpmN1JLc3J2b2hwSUNiZzByVkJKK3Zjclp3eDF3Vm40Vgo5b3pUaVl1S0NpMmZaUWNyQjZhRWxJbG5sY1k2bUsxNmkwbkpkTUVIYTlJamxsZTdnWkd3ejVoNnRaQlJLajhuCktRb21zam9JN1lDdllxTmhFZElQa1VpcXkvakwyQ3NRaHl4QjVlRFhNeVBXVnBkL3dLbVhOaS9pSVZDaVUrbUYKeWtYdDh4SS9TaFJyclQ2d1MyZFM2N01DQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFRkJ0SUVGWlM5TFNMczMxYQptQm1WR2UvOVNkVUJNQjhHQTFVZEl3UVlNQmFBRkJ0SUVGWlM5TFNMczMxYW1CbVZHZS85U2RVQk1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBSmNwYTJqbWIyd1RpekQ2MUIvK3Eyb0MKQXQ1d1cveDMxYWhVUjA4RUxKS0JhMjRLYW81azRkbnBRN2grK3FqangyRkkyOVBoUVBndWpISlJRc0QrRUh2Ywp0VGZDUkFUMVhDeDloRTBrQ3BqM3l2djBlL2V3NEVtU2VMMDJ3VkVWNTNlQmNNa3E1cXNMRUppbGNFTG55aGVHCkpJUmZpcWNSWFJWQ3QxZmtoNGxvQzE5eHNuWDFGY3J6bnlIYmlxQVQxcEl6UnpZc2lLSE9kM3ZHV3Y5T2JmRnMKNmttNXdiSnkwRGRHcmdRQ2djUVNHZUhPOG0vWGozSFpxTVpDVksyOVBGd0pETzVJTmgwbWxvK3BaaHMyeE1ENQo4akZ0d2tUVkxsc0F4bkJMYmZhV09QdzFWQlVTSm5HcHR3Q1llZ2FHbnQvMmdWc251VEh5eTZ2d2ZZMjE0dmtNCnhnd3dCMTRGTnFoZ3RrY1BOcERpUDNNa1d2OE5hZVAwMlVrMFRINVJDaElRN0QyNUR0cVR3YWJYeElmOG0zaTQKOHN3UWFEaDAveDV5MUc0R3VlWFhYbXNQbGpwWm12OHNoZnR1ZW5YT1p0MUVUQW93WkkxaHpLaFJDZHcwdjRydQpCKzNCUGZUazBZSkk1a0s1NUU5QlJjRjNTdkxOY2c3NzNybGNsWjRPaThwYUhWd1U1ZnRHTGlLYTh5bFB1SU9BCnhEMk0ySE9ETUVWZGNYM2FsQmY1RElyYzY4ZlRGbHhwdUZsWFliaEZMODM5S2pGSGY5NStOVC85b01YQ01xY2wKVDEvbk50ZmJyUm5DbE5lTm45QkxiS1Y2Qnk5WEI3UE1xZ0dsTkxPZ1RGTE9lTXo4QWhReWpBUVl3dmc3TWtYWgpSL3NZaVg4N2ZlSHp0TzlENnV5MAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRFpHZU10bzJaWjVZVjUKWDl1Z2xEQnY3UkQwMTJvcklIY2hDbWZML29ad2t2b20yYlV3N2FubGZlaDdkU2lrNTkxTmtqUjlkeUJybENpTwp3aXRJSWlnVDg4OGtEZlZ5MHQ1cmdMb0wyTEZYMGJHUUVpWklIQ0lUQ0VkdFRhdkFhWWRxNGM3cEU1eFJCTzhCCkdWY3hqY3J1Vzg1U0I5Q082dFdDSFd3TURsTWJFYVBkbHhjN3hTN3BGR3ZwVmtCRURxb0VCakdnNXkzQTduNFgKN2lzajR2NlRaZll1Qnk1U3Y4ekhiZ3JaZWVESkN1U25YTGY5bDFLNk5qOEJkZGVaN29KeTJ6WitYZjU5RS9LbApVakZjL1VBdjhvRnZ2M0JXSFAweGxlcWFUN3Nxa3BjVEp0SDIyaVRxNnRiR2loSEd6cWRIZU5EWHp1d2FiMzU0CkJoZlp5Mzc2bklrTC9Uam1WTk01eFFYNVJSOVE5YXIzZTNkY2MxWUtpeFlQZEoySHRCZEZUd3c2Q2NtY0pSMDAKNk9vNlVPbjdtQjFPWVU3aXd6UlZ6Z0xINFdyMDdZd21NWlpDTFVXUEtXZmVQL1dDZVJEanhLRkp6UnNzWXVORgpIUDhHNnV2NkZGSjFpNHd6QVpWdmt1VmVYOUNaVCt1ZFNjUUR0VmwvdEVxeXUraUdrZ0p1RFN0VUVuNjl5dG5ECkhYQldmaFgyak5PSmk0b0tMWjlsQnlzSHBvU1VpV2VWeGpxWXJYcUxTY2wwd1FkcjBpT1dWN3VCa2JEUG1IcTEKa0ZFcVB5Y3BDaWF5T2dqdGdLOWlvMkVSMGcrUlNLckwrTXZZS3hDSExFSGw0TmN6STlaV2wzL0FxWmMyTCtJaApVS0pUNllYS1JlM3pFajlLRkd1dFByQkxaMUxyc3dJREFRQUJBb0lDQUZKVzF5ckFCbG1pQzNWMVBiOHhkUTErClJDZ1lhMVBnQkU2cnU2Sks3b0pUdkR4djVhQ2hBd2JmTWdWZzhnRlpUejNVYmNRSUltdXF6WmNYWFlNR01WMGYKNHpneGN4NFJpL29KNElZTnNYVTFPcnNCcHpOQ09Fb3ZvYWQ3QmVEOEpUZ01YSVZad3JlWHYyNFRSbGF0Q0lKTwpuM25OTFBTSGJHTGs5YzI4d1JoTElITXlrc1ZBakFJcWxLTHk2M3prY3VjRDBsN01UellWUGcybGJ3YzFXSWhlCjYzZVprYUFnem5IMDhuaDVHU0FtMllJQVVHZ0Z0SUtiZ0ZuMWI4Z2FCYSs2SkhqWS9XUkM1SXgvRituRXcwdHMKRmx0anFCK0E3eWFYVFZzcFVqdGJUYUVkNEJSWHVCakE2S1IwU1RtMXR3d01ibWpyT2ZEc3lIS05IUTZsZDRxeQpZNm1lRkE2Nm5ndWE3bWZZMTlFY1ZoTjczK2s0YXlaQkxSS25WdjI5TndOcGh2T1U0SHFkNDRVWkJMMmRiTkUxCkN0RG8rRHEwZ25Pd3pGcHU3Q25aNXdabllGSnpPNm1BRHR2MmRIRDFOZmxFOUdlR3h4YUZLZjErYTJ5WlR2Ui8KbTZBbWhpd3dHcEt3cHV4NExuT2NYdzBTa2s0SGhkbzhNcDQySHk3b0RZNXlJQjllMmd3RFl0Wmp1YWxUUDU0aQpPQ1FrcjNsUW9YWDR3LzV5WVBOaWFBTDBMaU5Ra2p6NjNCbjVjWmZjWTRvcUtIZXBJbWRsM0x5YmQyeHFKVHlhCmhjNy96c0tvZWJNR0ZvVTBXb0o0NXlyZWppditmK2h0aVFSSzZMSXJ5ZFZzMytGcm05eGtLOTJzRkJOVncrNE8KS2lsUHh4ZzhXZS8zVnFMYnBkWEJBb0lCQVFEeFdWQzBZVTl1L0Rzc0RSSjhSenhUWEcvY20zdU1YTXBvc1cvQwo0ZWNya0xoRnJYV2Fnd01BbDkzcjdXQnVMOEc5UWdUVUROdVNxSzdlSE11TlZ4dmMyRHROV05hbXlYZ2hXVVhTCmYreTlyR0djY0NkS2ZEZFE3dkVORVQ0Tk1sZ0d5Wld3NEM5Mmsvd285eFdaVUx3REdEbkdiZkI5UDdvR3pMeEYKUVU3b0JlUzRRREYwd0Q0ZlNwbUVWSlV6bTFFcnhsWUFFMFNtVWxpL1dLaEwyQWZPeUs1c2M4S3hwWW94S2ZpMgp2eERQYXFFOWJwcnJ1SHVINjJTL0plY1d5S2UvR0NvaGk2TWtLU3FwK2hESUhQOFJYczkxUEE5US9VUzVPejJJClBMRGxRYkMvbW9RTC8wVG01blUzelBvUExEcjJ1b3NsM1h5cHUwOE9kVTI5QUU2TkFvSUJBUURtUjcvaGRmd1gKanBhRjZ4enM3N1V0cFBhckdjbHFtRjQvQ0RoVGRPRlZvNkUzdStjcWJ6bFZwYkNyVU5ORmsyNm1rN1Vld1VvMQp4QUlJTkU5RUc0Q3MvdzdxR21JdG1iUUppVkpyZWttVkZ4SzZ0cVo1UGdHM0VXTGpsMUpWZllIdkRDR3FVdFcvCjFWZEl0WXRHN0N5ZDlQMm9Gek9wN2hXK2YydkpLRElSck9CWCsxbis5SVVpZDJvZ3VybCt5am1XaXgzOWRmZmUKMjVyaDlqamtoc0R1dmRReEpSbTVzY085K2xEa0E4b3VoWG5JSURsd09qMFM2QnlUcVQ2eE5hWjBwQ1QvNEdMQwpFbXNQb2d3TTFaU1IveExJcmhSY0RjQUxoZ1ZVUklUVnU4WFRaRGx5MjlYdUJFNEF3WlVUWDkxbDIybjJtRVBkClhCMitJTmxqWDdNL0FvSUJBUURFN04xKzhNK0JmV2xDbmoveEM2YmJWZGNvSisxOUw5RXY3MmVEbWhPblptUVUKNWwzSS94RWFFTkJReXRVZDB2Vy8yUGhibFVvcnRsdElmREpTVnpzeXpYUkZ2akVXMGRpbFRWUTlWNGZ4azQvcAp0MUUzNDNhM0lOK3FpK0VYbjNaWHcyL1NiSG9OeE4zQkJ5cW1lRXVRTXRvaFlGOFRzMFcwZXFVNzFQZnZOYS9UCjd2enJpRmluNjVTcmR1QnV4VkpMNTM4UWZLaE5GVys0WVR5Zzlkb1pEWUhVbC9mS1A0b3NaMVM2dDllZGhpR2UKSUh0anpwbHM0OUxHYk1UTHdGbXZBS2FQeklJRzVWZ2NiUi80U0VDUENjODRseExnUUdjc3hIdUdpQTdHWVAwNAp1WGo0MlFaOWFKbElPSVhvajJ4bEdQeWtucjR6TjlSZnRiTUNmaGVaQW9JQkFRRG1CUzltajByallQdDhBM0RlClAwYVR0RjdzWkJLc0ZreTEyNGtmMi9VbGJSQWhzdURpb3p6N0QwbGNwcHlTdUFUa0FWRCt5b1pORkdBUFAra1oKbC9zOVVuemNYTVJLMW1oZXlqdDR2aXIzOEpjMXlES2JrdE4xd0xrdHF6NkR4SjFnWVpiVEluRCtjS1VDTE0xVgpaNTNkbmhVdHJSZGZHMEcvQ2xwcEVXeUorVXdTdGpDY0dqVk9TMGZJTDV3UVNRR2pIWTAwVzN6ZnNDNlNuVGNSCkZvVnJORlRiVGpyWElQanNNRGhTdW5KZmE5Wk1qOXV2L1l4NThUNXlSTEVwby9TRU9GMzQ5WExRZGtOWTF6NEEKSit1Q3RlNVdaSVJUdXl4a2xsZUdaL2JqNCs5a0M0M1M3RUpSd1IwRlpsaDVoTjJLMjlPSmpXamttUm5naThGNQpvT05UQW9JQkFCejlMWlFYWHpmRGN0Z0dYdGVaUnVSOWNwcjBWbjdkSnkwQ25lS2ZzM0dYQlJsU1RBcmNtdUJwCkl1VVRWcVNTSnZZSUdGVEMyZE1LcnI4Y2VqdUFxTFpvcE9yYjZQeXZOZHRpQzJQcGdpbm9EelhEZlFJOVZhb3YKSmF3dEhHRE9FTnZ5ZFUwcHozaDQwT0dGZG9NcU13TjEzQkdRaDg0ZnRLTjZBSXpXQkw2dldIRGp5MTM2RUw4MAp5bVhJN2ZVRzh6UEszRlNHUFZuT0Ivd0pLNkx4b1luT20yamxUc2REYzVlS3lUL1kxRGxqb3B0OWtYM3BHSUpZCmVYeU1mOFpzc05QUk5sRUxZU3NmcTJ6bHpWeFJCUDFNR1E2MW1DbTFhNHVzUTVQQ0IvWUhoQndzVFVNWTEweWEKdk9lUmZIdTN2TkFiVWJqYmhERDRVQkMvVWg4M0ZvMD0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
metadata:
  name: registry-tls
  namespace: default
type: Opaque
